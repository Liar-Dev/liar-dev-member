plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.2'
	id 'io.spring.dependency-management' version '1.1.0'
	id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'liar'
version = '0.0.1'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	asciidoctorExt
}

repositories {
	mavenCentral()
	maven { url 'https://artifactory-oss.prod.netflix.net/artifactory/maven-oss-candidates' }
}

ext {
	snippetsDir = file('build/generated-snippets') // restdocs
	set('springCloudVersion', "2022.0.0")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	implementation 'org.springframework.boot:spring-boot-starter-validation'

	//redissonClient
	implementation 'org.redisson:redisson-spring-boot-starter:3.20.0'

	//localdatetime 직렬화
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

	//jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	//json
	implementation 'com.google.code.gson:gson:2.10.1'

	//mockito
	testImplementation 'org.mockito:mockito-core:5.2.0'
	testImplementation 'org.mockito:mockito-junit-jupiter:5.2.0'

	//xss
	implementation 'com.navercorp.lucy:lucy-xss-servlet:2.0.0'
	implementation 'com.navercorp.lucy:lucy-xss:1.6.3'

	//StringEscapeUtils
	implementation 'org.apache.commons:commons-text:1.8'

	//redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	//config-service
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'

	//AMQP
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	//MYSQL
	runtimeOnly 'com.mysql:mysql-connector-j'
	implementation 'mysql:mysql-connector-java:8.0.32'

	//test lombok
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

sourceSets {
	main {
		java {
			srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated"]
		}
	}
}

clean {
	delete file('src/main/generated')
}


test {
	outputs.dir snippetsDir
	useJUnitPlatform()

	systemProperty 'spring.config.name', 'application-test'
	systemProperty 'spring.cloud.bootstrap.name', 'bootstrap'
}

asciidoctor {
	inputs.dir snippetsDir
	configurations 'asciidoctorExt'
	dependsOn test
}

//tasks.named('asciidoctor') {
//	inputs.dir snippetsDir
//	dependsOn test
//}


bootJar {
	dependsOn asciidoctor
	from ("${asciidoctor.outputDir}/html5") {
		into 'static/docs'
	}
}

bootJar {
	dependsOn asciidoctor

	copy {
		from asciidoctor.outputDir
		into "src/main/resources/static/docs"
	}
}

jar {
	enabled = false
}

tasks.withType(JavaCompile) {
	options.release = 17
}
